services:
    proxy:
        image: nginx
        volumes:
            - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
            - ./nginx/cert.pem:/etc/nginx/ssl/cert.pem:ro
            - ./nginx/key.pem:/etc/nginx/ssl/key.pem:ro
        ports:
            - 80:80
            - 443:443
        depends_on:
            - python_backend
            - react_frontend
        networks:
            - backnet

    python_backend:
        container_name: python_backend
        # To debug change command to
        # python -m debugpy --wait-for-client --listen 0.0.0.0:5678 -m flask run
        command: python app.py
        build:
            context: ./backend
            target: dev-envs
        stop_signal: SIGINT
        ports:
            - 8000:8000
            - 5678:5678
        volumes:
            - ./backend:/code
        depends_on:
            db:
              condition: service_healthy
        networks:
            - backnet

    react_frontend:
        container_name: react_frontend
        build:
            context: ./frontend
            target: development
        ports:
            - 3000:3000
        volumes:
            - ./frontend:/code
            - /code/node_modules
        networks:
            - backnet
        depends_on:
            - python_backend
        expose:
            - 3306
            - 33060

    db:
        container_name: db
        image: mysql
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_USER: root
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: tres_con_todo
        ports:
            - 3306:3306
        networks:
            - backnet
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', '$$MYSQL_USER', '--password=$$MYSQL_ROOT_PASSWORD']
            start_period: 5s
            interval: 5s
            timeout: 5s
            retries: 5

networks:
    backnet:

volumes:
    db-data:
